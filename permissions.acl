/**
 * Access control rules for sensordata-network
 */

//Sensor Owner has access only to their own account
rule SensorOwnerAccessOwnRecord {
    description: "Allow sensor owners to access only their profile"
    participant(p): "org.acme.biznet.SensorOwner"
    operation: READ, UPDATE
    resource(r): "org.acme.biznet.SensorOwner"
    condition: (r.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

//SensorOwner has read access to own Token Wallet asset
rule SensorOwnerReadAccessOwnTokenWalletRecord {
    description: "Allow SensorOwner to read access to own Token Wallet assets"
    participant(p): "org.acme.biznet.SensorOwner"
    operation: READ
    resource(r): "org.acme.biznet.TokenWallet"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//SensorOwners have read access to own Account asset
rule SensorOwnerReadAccessOwnAccountRecord {
    description: "Allow.SensorOwners read access to own Account assets"
    participant(p): "org.acme.biznet.SensorOwner"
    operation: READ
    resource(r): "org.acme.biznet.Account"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//SensorOwner to have read/write/update access to own air pollution data assets
rule SensorOwnerAccessRawDataRecord {
    description: "Allow.SensorOwners read/write/update access to own air pollution data assets"
    participant(p): "org.acme.biznet.SensorOwner"
    operation: CREATE, READ, UPDATE
    resource(r): "org.acme.biznet.RawData"
  	condition: (r.owner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule SensorOwnerSeeOwnHistoryOnly {
  description: "Sensor Owners should be able to see the history of their own transactions only"
  participant(t): "org.acme.biznet.SensorOwner"
  operation: READ
  resource(r): "org.hyperledger.composer.system.HistorianRecord"
  condition: (r.participantInvoking.getIdentifier() != t.getIdentifier())
  action: DENY
}

//SensorOwners to have read only access to other DataProcessors
rule SensorOwnerReadAccessDataProcessors {
    description: "Allow.SensorOwners read access to other DataProcessors"
    participant: "org.acme.biznet.SensorOwner"
    operation: READ
    resource: "org.acme.biznet.DataProcessor"
    action: ALLOW
}





// SensorOwner to have read access to sold air pollution data assets
rule SensorOwnerReadAccessRawDataRecord {
    description: "Allow.SensorOwners read access to sold air pollution data assets"
    participant(p): "org.acme.biznet.SensorOwner"
    operation: READ
    resource(r): "org.acme.biznet.RawData"
  	condition: (r.owner.getIdentifier() !== p.getIdentifier())
    action: ALLOW
}

//SensorOwners to have read only access to other Exchanges
rule SensorOwnerReadAccessExchanges {
    description: "Allow.SensorOwners read access to other exchanges"
    participant: "org.acme.biznet.SensorOwner"
    operation: READ
    resource: "org.acme.biznet.Exchange"
    action: ALLOW
}

//DataProcessors to have access to their own account
rule DataProcessorAccessOwnRecord {
    description: "Allow DataProcessor to access only their profile"
    participant(p): "org.acme.biznet.DataProcessor"
    operation: READ, UPDATE, DELETE
    resource(r): "org.acme.biznet.DataProcessor"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

//DataProcessors to have read only access to other SensorOwners
rule DataProcessorReadAccessSensorOwners {
    description: "Allow DataProcessors read access to other SensorOwners"
    participant: "org.acme.biznet.DataProcessor"
    operation: READ
    resource: "org.acme.biznet.SensorOwner"
    action: ALLOW
}

//DataProcessors to have read only access to other Exchanges
rule DataProcessorReadAccessExchanges {
    description: "Allow DataProcessors read access to other exchanges"
    participant: "org.acme.biznet.DataProcessor"
    operation: READ
    resource: "org.acme.biznet.Exchange"
    action: ALLOW
}

//DataProcessors to have read only access to other Data Consumers
rule DataProcessorReadAccessDataConsumers {
    description: "Allow DataProcessors read access to other data consumers"
    participant: "org.acme.biznet.DataProcessor"
    operation: READ
    resource: "org.acme.biznet.DataConsumer"
    action: ALLOW
}

//DataProcessors to have read access to own Wallet assets
rule DataProcessorReadAccessOwnWalletRecord {
    description: "Allow DataProcessors read access to own Wallet assets"
    participant(p): "org.acme.biznet.DataProcessor"
    operation: READ
    resource(r): "org.acme.biznet.Wallet"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//DataProcessors to have read access to own Account assets
rule DataProcessorReadAccessOwnAccountRecord {
    description: "Allow DataProcessors read access to own Account assets"
    participant(p): "org.acme.biznet.DataProcessor"
    operation: READ
    resource(r): "org.acme.biznet.Account"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//DataProcessor to have read access to purchased air pollution data assets
rule DataProcessorReadAccessRawDataRecord {
    description: "Allow DataProcessors read access to purchased air pollution data assets"
    participant(p): "org.acme.biznet.DataProcessor"
    operation: READ
    resource(r): "org.acme.biznet.RawData"
  	condition: (r.owner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

//DataProcessors to have write access to own extended data assets
rule DataProcessorAccessEnhancedDataRecord {
    description: "Allow DataProcessors access to own extended data assets"
    participant(p): "org.acme.biznet.DataProcessor"
    operation: CREATE, READ, UPDATE
    resource(r): "org.acme.biznet.EnhancedData"
  	condition: (r.owner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

//DataProcessors to have read access to forwarded extended data assets
rule DataProcessorReadAccessEnhancedDataRecord {
    description: "Allow DataProcessors read access to forwarded enhanced data assets"
    participant(p): "org.acme.biznet.DataProcessor"
    operation: READ
    resource(r): "org.acme.biznet.EnhancedData"
  	condition: (r.owner.getIdentifier() !== p.getIdentifier())
    action: ALLOW
}

//Exchanges to have access to their own account
rule ExchangeAccessOwnRecord {
    description: "Allow exchanges to access only their profile"
    participant(p): "org.acme.biznet.Exchange"
    operation: READ, UPDATE, DELETE
    resource(r): "org.acme.biznet.Exchange"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

//Exchanges to have read only access to other DataProcessors
rule ExchangeReadAccessDataProcessors {
    description: "Allow exchanges read access to other DataProcessors"
    participant: "org.acme.biznet.Exchange"
    operation: READ
    resource: "org.acme.biznet.DataProcessor"
    action: ALLOW
}

//Exchanges to have read only access to other SensorOwners
rule ExchangeReadAccesSensorOwners {
    description: "Allow exchanges read access to other SensorOwners"
    participant: "org.acme.biznet.Exchange"
    operation: READ
    resource: "org.acme.biznet.SensorOwner"
    action: ALLOW
}

//Exchanges to have read access to own Wallet assets
rule ExchangeReadAccessOwnWalletRecord {
    description: "Allow exchanges read access to own Wallet assets"
    participant(p): "org.acme.biznet.Exchange"
    operation: READ
    resource(r): "org.acme.biznet.Wallet"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//Exchanges to have read access to own Account assets
rule ExchangeReadAccessOwnAccountRecord {
    description: "Allow exchanges read access to own Account assets"
    participant(p): "org.acme.biznet.Exchange"
    operation: READ
    resource(r): "org.acme.biznet.Account"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//Data Consumers to have access only to their own account
rule DataConsumerAccessOwnRecord {
    description: "Allow data consumers to access only their profile"
    participant(p): "org.acme.biznet.DataConsumer"
    operation: READ, UPDATE, DELETE
    resource(r): "org.acme.biznet.DataConsumer"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

//Data Consumers to have read only access to other DataProcessors
rule DataConsumerReadAccessDataProcessors {
    description: "Allow data consumers read access to other DataProcessors"
    participant: "org.acme.biznet.DataConsumer"
    operation: READ
    resource: "org.acme.biznet.DataProcessor"
    action: ALLOW
}

//Data Consumers to have read access to own Account assets
rule DataConsumerReadAccessOwnAccountRecord {
    description: "Allow data consumers read access to own Account assets"
    participant(p): "org.acme.biznet.DataConsumer"
    operation: READ
    resource(r): "org.acme.biznet.Account"
    condition: (r.ownerId == p.getIdentifier())
    action: ALLOW
}

//Data Consumers to have read access to purchased air quality data assets
rule DataConsumerReadAccessAirQualityDataRecord {
    description: "Allow data consumers read access to purchased air quality data assets"
    participant(p): "org.acme.biznet.DataConsumer"
    operation: READ
    resource(r): "org.acme.biznet.EnhancedData"
  	condition: (r.owner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "ANY"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

